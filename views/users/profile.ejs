<section class="profile-section">
  <div class="container">
    <% if(messages.success_msg && messages.success_msg.length > 0) { %>
      <div class="alert alert-success alert-dismissible fade show">
        <%= messages.success_msg %>
        <button type="button" class="close-btn" data-dismiss="alert" aria-label="Close">
          <span aria-hidden="true"><i class="fas fa-times"></i></span>
        </button>
      </div>
    <% } %>
    
    <div class="profile-header">
      <div class="profile-avatar">
        <% if(user.profilePicture) { %>
          <img src="<%= user.profilePicture %>" alt="<%= user.displayName %>">
        <% } else { %>
          <div class="avatar-placeholder">
            <%= user.displayName.charAt(0).toUpperCase() %>
          </div>
        <% } %>
      </div>
      
      <div class="profile-info">
        <h1><%= user.displayName %></h1>
        <p class="username">@<%= user.username %></p>
        <% if(user.bio) { %>
          <p class="bio"><%= user.bio %></p>
        <% } %>
        <p class="joined-date">สมาชิกตั้งแต่ <%= new Date(user.createdAt).toLocaleDateString('th-TH', { year: 'numeric', month: 'long', day: 'numeric' }) %></p>
        
        <div class="profile-stats">
          <div class="stat">
            <span class="stat-number" id="tripCount">0</span>
            <span class="stat-label">ทริป</span>
          </div>
          <div class="stat">
            <span class="stat-number"><%= user.followers.length %></span>
            <span class="stat-label">ผู้ติดตาม</span>
          </div>
          <div class="stat">
            <span class="stat-number"><%= user.following.length %></span>
            <span class="stat-label">กำลังติดตาม</span>
          </div>
        </div>
        
        <div class="profile-actions">
          <a href="/users/edit-profile" class="btn btn-secondary">แก้ไขโปรไฟล์</a>
          <a href="/trips/create" class="btn btn-primary">สร้างทริปใหม่</a>
        </div>
      </div>
    </div>
    
    <div class="profile-content">
      <div class="profile-tabs">
        <ul class="tab-links">
          <li class="active"><a href="#trips">ทริปของฉัน</a></li>
          <li><a href="#saved">ทริปที่บันทึกไว้</a></li>
          <li><a href="#remixed">ทริปที่รีมิกซ์</a></li>
        </ul>
      </div>
      
      <div class="tab-content">
        <div id="trips" class="tab-pane active">
          <h2>ทริปของฉัน</h2>
          
          <div id="trips-container">
            <div class="loading-spinner">
              <i class="fas fa-spinner fa-spin"></i> กำลังโหลดทริป...
            </div>
          </div>
        </div>
        
        <div id="saved" class="tab-pane">
          <h2>ทริปที่บันทึกไว้</h2>
          
          <div class="empty-state">
            <div class="empty-text">
              ⊕
            </div>
            <h3>ยังไม่มีทริปที่บันทึกไว้</h3>
            <p>เมื่อคุณบันทึกทริปที่สนใจ ทริปเหล่านั้นจะแสดงที่นี่</p>
            <a href="/trips" class="btn btn-primary">สำรวจทริป</a>
          </div>
        </div>
        
        <div id="remixed" class="tab-pane">
          <h2>ทริปที่รีมิกซ์</h2>
          
          <div class="empty-state">
            <div class="empty-text">
              ⊕
            </div>
            <h3>ยังไม่มีทริปที่รีมิกซ์</h3>
            <p>เมื่อคุณรีมิกซ์ทริปจากผู้ใช้อื่น ทริปเหล่านั้นจะแสดงที่นี่</p>
            <a href="/trips" class="btn btn-primary">สำรวจทริป</a>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Tab switching
    const tabLinks = document.querySelectorAll('.tab-links li a');
    
    tabLinks.forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Hide all tab panes
        document.querySelectorAll('.tab-pane').forEach(pane => {
          pane.classList.remove('active');
        });
        
        // Remove active class from all tab links
        document.querySelectorAll('.tab-links li').forEach(tab => {
          tab.classList.remove('active');
        });
        
        // Add active class to current tab link
        this.parentElement.classList.add('active');
        
        // Show target tab pane
        const targetId = this.getAttribute('href');
        document.querySelector(targetId).classList.add('active');
      });
    });
    
    // Handle alert close buttons
    const closeButtons = document.querySelectorAll('.alert .close-btn');
    
    closeButtons.forEach(button => {
      button.addEventListener('click', function() {
        const alert = this.parentElement;
        alert.classList.remove('show');
        setTimeout(() => {
          alert.style.display = 'none';
        }, 150);
      });
    });
    
    // Auto close alerts after 5 seconds
    setTimeout(() => {
      document.querySelectorAll('.alert').forEach(alert => {
        alert.classList.remove('show');
        setTimeout(() => {
          alert.style.display = 'none';
        }, 150);
      });
    }, 5000);
    
    // Load user trips
    function loadUserTrips() {
      const tripsContainer = document.getElementById('trips-container');
      const userId = '<%= user._id %>';
      
      fetch(`/trips/user/${userId}`)
        .then(response => {
          if (response.redirected) {
            window.location.href = response.url;
            return;
          }
          return response.text();
        })
        .then(data => {
          if (data) {
            // Extract trip count from the data
            const parser = new DOMParser();
            const htmlDoc = parser.parseFromString(data, 'text/html');
            const tripCards = htmlDoc.querySelectorAll('.trip-card');
            
            // Update trip count
            document.getElementById('tripCount').textContent = tripCards.length;
            
            // Generate HTML for trips tab
            if (tripCards.length > 0) {
              const tripGrid = document.createElement('div');
              tripGrid.className = 'trip-grid';
              tripGrid.innerHTML = htmlDoc.querySelector('.trip-grid').innerHTML;
              tripsContainer.innerHTML = '';
              tripsContainer.appendChild(tripGrid);
              
              // Add delete trip event listeners
              const deleteButtons = tripsContainer.querySelectorAll('.delete-trip-btn');
              deleteButtons.forEach(button => {
                button.addEventListener('click', function() {
                  const tripId = this.getAttribute('data-id');
                  if (confirm('คุณแน่ใจหรือไม่ว่าต้องการลบทริปนี้? การกระทำนี้ไม่สามารถย้อนกลับได้')) {
                    document.getElementById('delete-form-' + tripId).submit();
                  }
                });
              });
            } else {
              // Show empty state
              tripsContainer.innerHTML = `
                <div class="empty-state">
                  <div class="empty-text">⊕</div>
                  <h3>ยังไม่มีทริป</h3>
                  <p>คุณยังไม่ได้สร้างทริปใดๆ เริ่มสร้างทริปแรกของคุณเลย!</p>
                  <a href="/trips/create" class="btn btn-primary">สร้างทริปใหม่</a>
                </div>
              `;
            }
          } else {
            tripsContainer.innerHTML = '<p class="error-message">เกิดข้อผิดพลาดในการโหลดทริป กรุณาลองใหม่อีกครั้ง</p>';
          }
        })
        .catch(error => {
          console.error('Error loading trips:', error);
          tripsContainer.innerHTML = '<p class="error-message">เกิดข้อผิดพลาดในการโหลดทริป กรุณาลองใหม่อีกครั้ง</p>';
        });
    }
    
    // Load trips on page load
    loadUserTrips();
  });
</script>

<style>
  .loading-spinner {
    text-align: center;
    padding: 2rem;
    color: #666;
  }
  
  .loading-spinner i {
    margin-right: 0.5rem;
    color: var(--primary-color);
  }
  
  .error-message {
    text-align: center;
    color: #f44336;
    padding: 1rem;
  }
  
  .trip-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
    margin-top: 1rem;
  }
  
  .trip-card {
    background-color: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s, box-shadow 0.3s;
    position: relative;
  }
  
  .trip-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
  }
  
  .trip-card-link {
    display: block;
    color: inherit;
    text-decoration: none;
  }
  
  .trip-card-image {
    height: 150px;
    position: relative;
  }
  
  .trip-card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .default-image {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-image: linear-gradient(120deg, var(--primary-color), var(--secondary-color));
    color: white;
    font-size: 3rem;
  }
  
  .trip-visibility {
    position: absolute;
    top: 10px;
    right: 10px;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 0.8rem;
  }
  
  .trip-visibility.public {
    background-color: rgba(25, 118, 210, 0.8);
  }
  
  .trip-visibility.private {
    background-color: rgba(211, 47, 47, 0.8);
  }
  
  .trip-card-content {
    padding: 1.2rem;
  }
  
  .trip-card-content h3 {
    font-size: 1.2rem;
    margin: 0 0 0.5rem;
    color: #333;
  }
  
  .trip-dates {
    font-size: 0.85rem;
    color: #666;
    margin-bottom: 0.5rem;
  }
  
  .trip-dates i {
    color: var(--primary-color);
    margin-right: 0.3rem;
  }
  
  .trip-stats {
    display: flex;
    gap: 1rem;
    font-size: 0.8rem;
    color: #777;
  }
  
  .trip-stats i {
    color: var(--primary-color);
  }
  
  .trip-card-actions {
    position: absolute;
    bottom: 10px;
    right: 10px;
    display: flex;
    gap: 0.5rem;
  }
  
  .btn-circle {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    border: none;
    cursor: pointer;
    font-size: 0.9rem;
  }
  
  .btn-edit {
    background-color: #2196f3;
  }
  
  .btn-delete {
    background-color: #f44336;
  }
</style>